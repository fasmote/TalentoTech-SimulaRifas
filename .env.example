# ===================================
# CONFIGURACIÓN DE VARIABLES DE ENTORNO
# Proyecto: Simulador de Rifas - Talento Tech curso NODE.JS
# ===================================

# ===== CONFIGURACIÓN DEL SERVIDOR =====
# Puerto donde se ejecutará el servidor Express
PORT=3000

# Entorno de ejecución (development, production, test)
NODE_ENV=development

# ===== CONFIGURACIÓN DE BASE DE DATOS =====
# Ruta al archivo de base de datos SQLite
DB_PATH=./backend/database/rifas.db

# Configuración de conexión a base de datos
DB_TIMEOUT=30000

# ===== CONFIGURACIÓN DE AUTENTICACIÓN JWT =====
# Clave secreta para firmar tokens JWT
# IMPORTANTE: Cambiar por una clave segura y única
# Generar con: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=tu_clave_secreta_super_segura_para_jwt_aqui_cambiar_por_una_real

# Tiempo de expiración de tokens JWT
JWT_EXPIRES_IN=24h

# ===== CONFIGURACIÓN DE ENCRIPTACIÓN =====
# Número de rondas para bcrypt (entre 10-12 recomendado)
BCRYPT_ROUNDS=10

# ===== CONFIGURACIÓN DE CORS =====
# Orígenes permitidos para CORS (separados por coma)
CORS_ORIGIN=http://localhost:3000,http://127.0.0.1:3000

# ===== CONFIGURACIÓN DE ARCHIVOS ESTÁTICOS =====
# Directorio para archivos subidos
UPLOAD_DIR=./uploads

# Tamaño máximo de archivos (en bytes)
MAX_FILE_SIZE=5242880

# ===== CONFIGURACIÓN DE EMAIL (OPCIONAL) =====
# Para funcionalidades futuras de notificaciones
EMAIL_SERVICE=gmail
EMAIL_USER=tu_email@gmail.com
EMAIL_PASS=tu_password_de_aplicacion

# ===== CONFIGURACIÓN DE LOGGING =====
# Nivel de logging (error, warn, info, debug)
LOG_LEVEL=info

# Directorio para logs
LOG_DIR=./backend/logs

# ===== CONFIGURACIÓN DE DESARROLLO =====
# Mostrar stack traces completos en desarrollo
SHOW_STACK_TRACE=true

# Recargar automáticamente en cambios
AUTO_RELOAD=true

# ===== CONFIGURACIÓN DE PRODUCCIÓN =====
# URL base de la aplicación en producción
BASE_URL=https://tu-app.herokuapp.com

# Configuración de SSL/HTTPS
FORCE_HTTPS=false

# ===== CONFIGURACIÓN DE CACHE =====
# Tiempo de cache para archivos estáticos (en segundos)
STATIC_CACHE_TTL=86400

# ===== CONFIGURACIÓN DE RATE LIMITING =====
# Número máximo de requests por ventana de tiempo
RATE_LIMIT_MAX=100

# Ventana de tiempo para rate limiting (en minutos)
RATE_LIMIT_WINDOW=15

# ===== CONFIGURACIÓN DE SESIONES =====
# Clave secreta para sesiones (si se implementan)
SESSION_SECRET=otra_clave_secreta_para_sesiones_cambiar_tambien

# ===== CONFIGURACIÓN DE TALENTO TECH =====
# Información específica del curso
COURSE_NAME=Talento Tech curso NODE.JS
COURSE_YEAR=2025
STUDENT_NAME=Tu_Nombre_Aqui

# ===== INSTRUCCIONES DE USO =====
# 1. Copiar este archivo como .env en la raíz del proyecto
# 2. Cambiar TODAS las claves secretas por valores únicos y seguros
# 3. Ajustar las configuraciones según tu entorno de desarrollo
# 4. NO subir el archivo .env real a GitHub (debe estar en .gitignore)
# 5. Para generar claves seguras usar: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# ===== NOTAS IMPORTANTES =====
# - Las variables que contienen "SECRET" o "PASS" DEBEN cambiarse
# - En producción, usar variables de entorno del hosting (Heroku, Railway, etc.)
# - Verificar que .env esté en .gitignore para no exponer secretos
# - Documentar cualquier nueva variable que agregues aquí

# ===== EJEMPLO DE CONFIGURACIÓN MÍNIMA =====
# Para desarrollo rápido, al menos configurar:
# PORT=3000
# NODE_ENV=development
# JWT_SECRET=clave_super_secreta_unica
# DB_PATH=./backend/database/rifas.db
